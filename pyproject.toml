
[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
authors = [
  {name = "jobs", email = "alex@cacko.net"},
]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
description = "A small jobs package"
name = "jobs"
readme = "README.md"
requires-python = ">=3.12"
dynamic = ["version"]
dependencies = [
	"annotated-types",
	"anyio",
	"appdirs",
	"autoflake8",
	"autopep8",
	"better-exceptions",
	"boto3",
	"build",
	"CacheControl",
	"cachetools",
	"certifi",
	"cffi",
	"charset-normalizer",
	"click",
	"colorama",
	"corefile",
	"coreimage",
	"corelog",
	"corestring",
	"cryptography",
	"emoji",
	"et-xmlfile",
	"fastapi",
	"filetype",
	"firebase-admin",
	"flake8",
	"fs",
	"fuzzelinho",
	"google-api-core",
	"google-api-python-client",
	"google-auth",
	"google-auth-httplib2",
	"google-cloud-core",
	"google-cloud-firestore",
	"google-cloud-storage",
	"google-crc32c",
	"google-resumable-media",
	"googleapis-common-protos",
	"h11",
	"httplib2",
	"httptools",
	"humanfriendly",
	"idna",
	"jmespath",
	"Levenshtein",
	"markdown-it-py",
	"mccabe",
	"mdurl",
	"msgpack",
	"numpy",
	"olefile",
	"opencv-python",
	"openpyxl",
	"packaging",
	"pandas",
	"peewee",
	"pillow>=11",
	"prompt-toolkit",
	"proto-plus",
	"protobuf<5,",
	"psycopg2-binary",
	"pyasn1",
	"pyasn1-modules",
	"pycodestyle",
	"pycountry",
	"pycparser",
	"pydantic",
	"pydantic_core",
	"pyfiglet",
	"pyflakes",
	"Pygments",
	"PyJWT",
	"pyparsing",
	"pypdfium2",
	"pyproject_hooks",
	"python-dateutil",
	"python-dotenv",
	"python-multipart",
	"python-slugify",
	"pytz",
	"pyyaml",
	"questionary",
	"rapidfuzz",
	"requests",
	"rich",
	"s3transfer",
	"segno",
	"semver",
	"six",
	"sniffio",
	"starlette",
	"stringcase",
	"structlog",
	"term-image",
	"text-unidecode",
	"typer",
	"typing_extensions",
	"tzdata",
	"Unidecode",
	"uritemplate",
	"uvicorn",
	"uvloop",
	"watchfiles",
	"wcwidth",
	"websockets",
]

[project.scripts]
jobs-cli = "jobs.cli:cli"

[tool.setuptools.dynamic]
version = {file = "version"}

[tool.mypy]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
exclude = ["^.well-known/", "t.py", "Taskfile.yml", "version", ".gitignore"]